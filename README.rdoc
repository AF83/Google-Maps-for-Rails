== Google Maps for Rails (gmaps4rails)


Gmaps4rails is developped to simply create a Google Map (Gmaps) from:

- model instances (say Users),

- your own json

It's based on Ruby on Rails 3 Engines and uses Google Maps API V3 with Marker Clusterer in option.

NOTE: this is a forked code tree with several enhancements:
- Made map initialization conditional on window.load to work around the IE "unspecified error", apparently caused by trying to initialize the map before the window and all the elements are loaded into the browser
- Added options to provide map id and map container id:
  <%= gmaps4rails_map(@json, { "processing" => 'json', "map_container_id" => "connections_map_container", "map_id" => "connections_map"}) %> 
- Added option to provide "title" attribute to markers
- Added JS function "clear markers" to clear the map, needed by "replace markers"
function
- Added JS function "replace_markers" to add new markers to the map.  This is particularly useful for when you use AJAX to update your map without needing to re-initialize the map:
  Gmaps4Rails.replace_markers(your_markers_json_string)

== Installation

	gem install gmaps4rails

== Requirements
- <%= yield :head %> (in your header)
- <%= yield :scripts %> (in your footer)
- config.serve_static_assets = true  (in your production.rb)
- jQuery (used for ajax json, not mandatory if you only use the 'json' option)

== Basic configuration
In your model, add:

	acts_as_gmappable

	def gmaps4rails_address
	  self.address #describe how to retrieve the address from your model
	end

Create a migration and add the following fields to your table (here users):

	add_column :users, :latitude, :float #you can change the name, see wiki
	add_column :users, :longitude, :float #you can change the name, see wiki
	add_column :users, :gmaps, :boolean #not mandatory, see wiki

== How to?
=== QuickStart!
Say you have a User model and you want to display all the users on a map.
In your view:

	<%= gmaps4rails_map("User") %>

Done!

=== Same Result, alternative solution
With this version, you won't need jQuery.
In your controller:
 
  @json = User.all.to_gmaps4rails

In your view:

  <%= gmaps4rails(@json) %>

Done again!

== Options

* Info window

* Custom Marker

* Scopes

* Create from your own json

* Geocode directly your address and retrieve coordinates. 

* Auto-adjust the map to your markers

* {More details in the Wiki}[https://github.com/apneadiving/Google-Maps-for-Rails/wiki]

== Todo?

Feel free ton contact us, you have your say.

== Copyright
MIT license. 
Authors: Benjamin Roth, David Ruyer
Contributor: Alex Vorobiev